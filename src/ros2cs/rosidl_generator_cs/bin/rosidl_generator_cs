#!/usr/bin/env python3

# Copyright 2019-2021 Robotec.ai
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import argparse
import os
import sys


try:
    from rosidl_generator_cs import generate_cs
except ImportError:
    # modifying sys.path and importing the .NET package with the same
    # name as this script does not work on Windows
    rosidl_generator_cs_root = os.path.dirname(os.path.dirname(__file__))
    rosidl_generator_cs_module = os.path.join(
        rosidl_generator_cs_root, 'rosidl_generator_cs', '__init__.py')
    if not os.path.exists(rosidl_generator_cs_module):
        raise
    from importlib.machinery import SourceFileLoader

    loader = SourceFileLoader('rosidl_generator_cs', rosidl_generator_cs_module)
    rosidl_generator_cs = loader.load_module()
    generate_cs = rosidl_generator_cs.generate_cs


def main(argv=sys.argv[1:]):
    parser = argparse.ArgumentParser(description='Generate the CSharp ROS interfaces.')
    parser.add_argument(
        '--generator-arguments-file',
        required=True,
        help='The location of the file containing the generator arguments')
    parser.add_argument(
        '--typesupport-impls',
        required=True,
        help='All the available typesupport implementations')
    args = parser.parse_args(argv)

    return generate_cs(args.generator_arguments_file, args.typesupport_impls.split(';'))


if __name__ == '__main__':
    sys.exit(main())
